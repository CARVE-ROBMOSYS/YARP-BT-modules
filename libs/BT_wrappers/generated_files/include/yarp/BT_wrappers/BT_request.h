/*
 * Copyright (C) 2006-2019 Istituto Italiano di Tecnologia (IIT)
 * All rights reserved.
 *
 * This software may be modified and distributed under the terms of the
 * BSD-3-Clause license. See the accompanying LICENSE file for details.
 */

// Autogenerated by Thrift Compiler (0.12.0-yarped)
//
// This is an automatically generated file.
// It could get re-generated if the ALLOW_IDL_GENERATION flag is on.

#ifndef YARP_THRIFT_GENERATOR_SERVICE_BT_REQUEST_H
#define YARP_THRIFT_GENERATOR_SERVICE_BT_REQUEST_H

#include <yarp/os/Wire.h>
#include <yarp/os/idl/WireTypes.h>
#include <yarp/BT_wrappers/ActionID.h>
#include <yarp/BT_wrappers/ReturnStatus.h>
#include <yarp/os/Property.h>

namespace yarp {
namespace BT_wrappers {

class BT_request :
        public yarp::os::Wire
{
public:
    // Constructor
    BT_request();

    virtual ReturnStatus request_status(const ActionID& target);

    virtual ReturnStatus request_tick(const ActionID& target, const yarp::os::Property& params = {  });

    virtual ReturnStatus request_halt(const ActionID& target, const yarp::os::Property& params = {  });

    virtual bool request_initialize();

    virtual bool request_terminate();

    // help method
    virtual std::vector<std::string> help(const std::string& functionName = "--all");

    // read from ConnectionReader
    bool read(yarp::os::ConnectionReader& connection) override;
};

} // namespace yarp
} // namespace BT_wrappers

#endif // YARP_THRIFT_GENERATOR_SERVICE_BT_REQUEST_H
